{"version":3,"sources":["api/index.js","helpers/BEM.js","components/RequestForm/RequestForm.js","actions/index.js","components/PurchasesBlock.js","components/Output/Output.js","reducers/currencies.js","reducers/sovenirStore.js","reducers/index.js","components/SouvenirStoreApp/SouvenirStoreApp.js","components/Provider.js","index.js","configureStore.js"],"names":["handleErrors","res","ok","Error","statusText","getAllCurrencies","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","fetch","t1","sent","abrupt","json","stop","apply","this","arguments","ELEMENT_SEPARATOR","MODIFIER_SEPARATOR","b","elementName","e","m","modifiers","length","undefined","Array","isArray","keys","filter","modifier","base","join","concat","toConsumableArray","map","trim","getBEMPAth","BEM","connect","purchase","date","price","currency","productName","type","id","v4","parseFloat","showAllPurchases","clearPurchasesByDate","reportAboutPurchases","totalIncome","showErrorMessage","error","allPurchases","currencyData","_useState","useState","_useState2","slicedToArray","input","setInput","makePurchase","methods","all","clear","report","year","purchaseDate","slice","purchases","Number","toFixed","react_default","createElement","action","className","onSubmit","preventDefault","args","split","hasOwnProperty","string","match","forEach","arg","handleSubmit","name","placeholder","onChange","target","value","PurchasesBlock","key","Output","components_PurchasesBlock","combineReducers","currenciesData","state","payload","currencies","rates","isLoading","hasError","souvenirStore","byDate","objectSpread","defineProperty","newState","assign","allDates","indexOf","prototype","call","sort","Date","reverse","errors","getCurrencies","fromCurrencies","isCurrenciesLoading","isCurrenciesHasErrorLoading","getAllPurchasesByDate","fromSouvenirStore","isStoreHasErrorMessage","getTotalIncome","storeErrorMessage","fetchCurrencies","dispatch","data","_x","useEffect","components_RequestForm_RequestForm","components_Output_Output","ProviderWrapper","children","store","es","ReactDOM","render","Provider","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","components_SouvenirStoreApp_SouvenirStoreApp","document","getElementById"],"mappings":"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","file":"static/js/main.57ed071d.chunk.js","sourcesContent":["const API = 'http://data.fixer.io/api/latest?access_key=26d6132618a9e2ec422be84ba48a260a'\r\n\r\nconst handleErrors = res => {\r\n  if (!res.ok)\r\n    throw new Error(res.statusText)\r\n  else return res\r\n}\r\n\r\nexport const getAllCurrencies = async () =>\r\n  handleErrors(await fetch(API)).json()","const ELEMENT_SEPARATOR = '__',\r\n  MODIFIER_SEPARATOR = '_'\r\n\r\nfunction getBEMPAth({ b, e, m }) {\r\n  const base = e ? [b, e].join(ELEMENT_SEPARATOR) : b\r\n\r\n  return [base, ...m.map(modifier => [base, modifier].join(MODIFIER_SEPARATOR))]\r\n    .join(' ')\r\n    .trim()\r\n}\r\n\r\nconst b = b => (elementName, modifiers = {}) => {\r\n  let e, m\r\n\r\n  if (typeof elementName === 'string') {\r\n    e = elementName\r\n  } else {\r\n    modifiers = elementName || {}\r\n  }\r\n\r\n  if (Array.isArray(modifiers)) {\r\n    m = modifiers\r\n  } else {\r\n    m = Object.keys(modifiers).filter(modifier => modifiers[modifier]) || []\r\n  }\r\n\r\n  return getBEMPAth({ b, e, m })\r\n}\r\n\r\nexport default b","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  clearPurchasesByDate,\r\n  purchase,\r\n  reportAboutPurchases,\r\n  showAllPurchases,\r\n  showErrorMessage\r\n} from '../../actions'\r\n\r\nimport './RequestForm.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('RequestForm')\r\n\r\nconst RequestForm = ({ purchase, showAllPurchases, showErrorMessage, clearPurchasesByDate, reportAboutPurchases, allPurchases, currencyData }) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const makePurchase = (date, price, currency, productName) => {\r\n    purchase(date, price, currency, productName)\r\n  }\r\n\r\n  const all = () => {\r\n    showAllPurchases()\r\n  }\r\n\r\n  const clear = (date) => {\r\n    clearPurchasesByDate(date)\r\n  }\r\n\r\n  const report = (year, currency) => {\r\n    let totalIncome = 0\r\n\r\n    const filteredData = allPurchases.filter(purchaseDate => purchaseDate.id.slice(0, 4) === year)\r\n    filteredData.map(date => date.purchases.map(purchase => {\r\n        purchase.currency !== currency ?\r\n          totalIncome = totalIncome + purchase.price / currencyData[purchase.currency] * currencyData[currency]\r\n          :\r\n          totalIncome += purchase.price\r\n      }\r\n    ))\r\n\r\n    reportAboutPurchases(`${Number((totalIncome).toFixed(2))} ${currency}`)\r\n  }\r\n\r\n  const methods = {\r\n    'purchase': makePurchase,\r\n    'all': all,\r\n    'clear': clear,\r\n    'report': report\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    e.preventDefault()\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let args = input.split(' ')\r\n\r\n    if (methods.hasOwnProperty(args[0])) {\r\n      if (methods[args[0]] === makePurchase && args.slice(1).length > 4) {\r\n        const re = /\"*/\r\n        let string = ''\r\n\r\n        if (args.slice(1)[3].match(re)) {\r\n          args.slice(4).forEach(arg => string += ` ${arg}`)\r\n        }\r\n\r\n        methods[args[0]](...args.slice(1, 4), string)\r\n\r\n      } else methods[args[0]](...args.slice(1))\r\n    } else {\r\n      showErrorMessage('Error: No such command.')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form action=\"\" className={b()} onSubmit={e => handleSubmit(e)}>\r\n      <input\r\n        type=\"text\"\r\n        name='query'\r\n        placeholder=\"Type your query here...\"\r\n        className={b('input')}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button className={b('submit')} type='submit'>Click to Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    purchase,\r\n    showAllPurchases,\r\n    clearPurchasesByDate,\r\n    reportAboutPurchases,\r\n    showErrorMessage\r\n  }\r\n)(RequestForm)","import { v4 } from 'node-uuid'\r\nimport { getAllCurrencies } from '../api'\r\n//fixer api action-names\r\nexport const FETCH_CURRENCIES_BEGIN = 'FETCH_CURRENCIES_BEGIN'\r\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS'\r\nexport const FETCH_CURRENCIES_FAILURE = 'FETCH_CURRENCIES_FAILURE'\r\n//store action-names\r\nexport const PURCHASE = 'PURCHASE'\r\nexport const SHOW_ALL_PURCHASES = 'SHOW_ALL_PURCHASES'\r\nexport const CLEAR_PURCHASES_BY_DATE = 'CLEAR_PURCHASES_BY_DATE'\r\nexport const REPORT_ABOUT_PURCHASES = 'REPORT_ABOUT_PURCHASES'\r\nexport const SHOW_ERROR_MESSAGE = 'SHOW_ERROR_MESSAGE'\r\n\r\n//fixer api actions\r\nexport const fetchCurrenciesBegin = () => ({\r\n  type: FETCH_CURRENCIES_BEGIN\r\n})\r\n\r\nexport const fetchCurrenciesSuccess = currencies => ({\r\n  type: FETCH_CURRENCIES_SUCCESS,\r\n  payload: { currencies }\r\n})\r\n\r\nexport const fetchCurrenciesFailure = error => ({\r\n  type: FETCH_CURRENCIES_FAILURE,\r\n  payload: { error }\r\n})\r\n\r\nexport const fetchCurrencies = () => async (dispatch) => {\r\n  dispatch(fetchCurrenciesBegin())\r\n\r\n  try {\r\n    const data = await getAllCurrencies()\r\n    dispatch(fetchCurrenciesSuccess(data))\r\n  } catch (error) {\r\n    dispatch(fetchCurrenciesFailure(error))\r\n  }\r\n}\r\n\r\n//store actions\r\nexport const purchase = (date, price, currency, productName) => ({\r\n  type: PURCHASE,\r\n  id: v4(),\r\n  date,\r\n  price: parseFloat(price),\r\n  currency,\r\n  productName\r\n})\r\n\r\nexport const showAllPurchases = () => ({\r\n  type: SHOW_ALL_PURCHASES\r\n})\r\n\r\nexport const clearPurchasesByDate = date => ({\r\n  type: CLEAR_PURCHASES_BY_DATE,\r\n  date\r\n})\r\n\r\nexport const reportAboutPurchases = totalIncome => ({\r\n  type: REPORT_ABOUT_PURCHASES,\r\n  totalIncome\r\n})\r\n\r\nexport const showErrorMessage = error => ({\r\n  type: SHOW_ERROR_MESSAGE,\r\n  error\r\n})","import React from 'react'\r\n\r\nconst PurchasesBlock = ({ date, allPurchases }) => {\r\n  return (\r\n    <div>\r\n      <h5>{date}</h5>\r\n      {allPurchases.map(purchase =>\r\n        <p key={purchase.id}>\r\n          {purchase.productName} {purchase.price} {purchase.currency}\r\n        </p>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PurchasesBlock","import React from 'react'\r\n\r\nimport PurchasesBlock from '../PurchasesBlock'\r\n\r\nimport './Output.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('Output')\r\n\r\nconst Output = ({ allPurchases, error, totalIncome }) => {\r\n  if (error) {\r\n    return (\r\n      <div className={b(['error'])}>\r\n        <h3 className={b('title')}>Output:</h3>\r\n        {error}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (totalIncome) {\r\n    return (\r\n      <div className={b()}>\r\n        <h3 className={b('title')}>Output:</h3>\r\n        {totalIncome}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <h3 className={b('title')}>Output:</h3>\r\n      {allPurchases.map(purchaseDate => (\r\n        <PurchasesBlock key={purchaseDate.id} date={purchaseDate.id} allPurchases={purchaseDate.purchases}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Output","import { combineReducers } from 'redux'\r\n\r\nimport { FETCH_CURRENCIES_BEGIN, FETCH_CURRENCIES_FAILURE, FETCH_CURRENCIES_SUCCESS } from '../actions'\r\n\r\nconst currenciesData = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return state\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return action.payload.currencies.rates\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return action.payload.error\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst isLoading = (state = false, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return true\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return false\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst hasError = (state = null, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return null\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return null\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return action.payload.error\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  currenciesData,\r\n  isLoading,\r\n  hasError\r\n})\r\n\r\n//Selectors\r\nexport const getCurrencies = state =>\r\n  state.currenciesData\r\n\r\nexport const isCurrenciesLoading = state =>\r\n  state.isLoading\r\n\r\nexport const isCurrenciesHasErrorLoading = state =>\r\n  state.hasError","import { combineReducers } from 'redux/es/redux'\r\n\r\nimport {\r\n  CLEAR_PURCHASES_BY_DATE,\r\n  PURCHASE,\r\n  REPORT_ABOUT_PURCHASES,\r\n  SHOW_ALL_PURCHASES, SHOW_ERROR_MESSAGE\r\n} from '../actions'\r\n\r\nconst byDate = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PURCHASE:\r\n      if (!state.hasOwnProperty(action.date)) {\r\n        return {\r\n          ...state,\r\n          [action.date]: {\r\n            id: action.date,\r\n            purchases: [\r\n              {\r\n                id: action.id,\r\n                date: action.date,\r\n                price: action.price,\r\n                currency: action.currency,\r\n                productName: action.productName\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      } else return {\r\n        ...state,\r\n        [action.date]: {\r\n          id: action.date,\r\n          purchases: [\r\n            ...state[action.date].purchases,\r\n            {\r\n              id: action.id,\r\n              date: action.date,\r\n              price: action.price,\r\n              currency: action.currency,\r\n              productName: action.productName\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    case SHOW_ALL_PURCHASES:\r\n      return state\r\n    case CLEAR_PURCHASES_BY_DATE:\r\n      const newState = Object.assign({}, state)\r\n      delete newState[action.date]\r\n      return newState\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allDates = (state = [], action) => {\r\n  switch (action.type) {\r\n    case PURCHASE:\r\n      if (state.indexOf(action.date) === -1)\r\n        return [...state, action.date]\r\n      else return state\r\n    case SHOW_ALL_PURCHASES:\r\n      return Array.prototype.slice.call(state).sort((a, b) => new Date(b) - new Date(a)).reverse()\r\n    case CLEAR_PURCHASES_BY_DATE:\r\n      return state.filter(date => date !== action.date)\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst errors = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SHOW_ERROR_MESSAGE:\r\n      return action.error\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nconst totalIncome = (state = null, action) => {\r\n  switch (action.type) {\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return action.totalIncome\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nconst souvenirStore = combineReducers({\r\n  byDate,\r\n  allDates,\r\n  errors,\r\n  totalIncome\r\n})\r\n\r\nexport default souvenirStore\r\n\r\n//Selectors\r\nexport const getAllPurchasesByDate = state => state.allDates.map(date => state.byDate[date])\r\n\r\nexport const getPurchasesByYear = (year, state) => {\r\n  const filteredDates = state.allDates.filter(date => date.slice(0, 4) === year)\r\n  return filteredDates.map(date => state.byDate[date])\r\n}\r\n\r\nexport const isStoreHasErrorMessage = state => state.errors\r\n\r\nexport const getTotalIncome = state => state.totalIncome","import { combineReducers } from 'redux/es/redux'\r\n\r\nimport currencies, * as fromCurrencies from './currencies'\r\nimport souvenirStore, * as fromSouvenirStore from './sovenirStore'\r\n\r\nexport default combineReducers({\r\n  currencies: currencies,\r\n  souvenirStore: souvenirStore\r\n})\r\n\r\n//Currencies selectors\r\nexport const getCurrencies = state =>\r\n  fromCurrencies.getCurrencies(state.currencies)\r\n\r\nexport const isCurrenciesLoading = state =>\r\n  fromCurrencies.isCurrenciesLoading(state.currencies)\r\n\r\nexport const isCurrenciesHasErrorLoading = state =>\r\n  fromCurrencies.isCurrenciesHasErrorLoading(state.currencies)\r\n\r\n//Store selectors\r\nexport const getAllPurchasesByDate = state =>\r\n  fromSouvenirStore.getAllPurchasesByDate(state.souvenirStore)\r\n\r\nexport const getPurchasesByYear = (year, state) =>\r\n  fromSouvenirStore.getPurchasesByYear(year, state.souvenirStore)\r\n\r\nexport const isStoreHasErrorMessage = state =>\r\n  fromSouvenirStore.isStoreHasErrorMessage(state.souvenirStore)\r\n\r\nexport const getTotalIncome = state =>\r\n  fromSouvenirStore.getTotalIncome(state.souvenirStore)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport RequestForm from '../RequestForm'\r\nimport Output from '../Output'\r\nimport {\r\n  getAllPurchasesByDate,\r\n  getCurrencies,\r\n  isCurrenciesLoading,\r\n  isCurrenciesHasErrorLoading,\r\n  isStoreHasErrorMessage,\r\n  getTotalIncome\r\n} from '../../reducers'\r\nimport { fetchCurrencies } from '../../actions'\r\n\r\nimport './SouvenirStoreApp.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('SouvenirStoreApp')\r\n\r\nconst SouvenirStoreApp = ({ fetchCurrencies, currencies, isLoading, hasError, allPurchases, storeErrorMessage, totalIncome }) => {\r\n  useEffect(() => {\r\n    fetchCurrencies()\r\n  }, [fetchCurrencies])\r\n\r\n  if (isLoading) return <div className={b('data-error')}>Data is Loading...</div>\r\n\r\n  if (hasError) return <div className={b('data-error')}>Error occurred while fetching API: {hasError}</div>\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <h1 className={b('title')}>Souvenir-store App</h1>\r\n      <RequestForm\r\n        allPurchases={allPurchases}\r\n        currencyData={currencies}/>\r\n      <Output\r\n        allPurchases={allPurchases}\r\n        totalIncome={totalIncome}\r\n        error={storeErrorMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    currencies: getCurrencies(state),\r\n    isLoading: isCurrenciesLoading(state),\r\n    hasError: isCurrenciesHasErrorLoading(state),\r\n    allPurchases: getAllPurchasesByDate(state),\r\n    storeErrorMessage: isStoreHasErrorMessage(state),\r\n    totalIncome: getTotalIncome(state)\r\n  }),\r\n  {\r\n    fetchCurrencies\r\n  }\r\n)(SouvenirStoreApp)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst ProviderWrapper = ({ children, store }) => (\r\n  <Provider store={store}>\r\n    {children}\r\n  </Provider>\r\n)\r\n\r\nexport default ProviderWrapper","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport SouvenirStoreApp from './components/SouvenirStoreApp'\nimport ProviderWrapper from './components/Provider'\nimport configureStore from './configureStore'\n\nimport './index.css'\n\nReactDOM.render(\n  <ProviderWrapper store={configureStore()}>\n    <SouvenirStoreApp/>\n  </ProviderWrapper>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default () =>\r\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))"],"sourceRoot":""}