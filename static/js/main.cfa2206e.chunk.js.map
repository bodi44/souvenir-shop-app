{"version":3,"sources":["api/index.js","helpers/BEM.js","components/RequestForm/RequestForm.js","actions/index.js","components/PurchasesBlock/PurchasesBlock.js","components/Output/Output.js","reducers/currencies.js","reducers/sovenirStore.js","reducers/index.js","components/SouvenirStoreApp/SouvenirStoreApp.js","components/Provider.js","index.js","configureStore.js"],"names":["handleErrors","res","ok","Error","statusText","getAllCurrencies","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","fetch","t1","sent","abrupt","json","stop","apply","this","arguments","ELEMENT_SEPARATOR","MODIFIER_SEPARATOR","b","elementName","e","m","modifiers","length","undefined","Array","isArray","keys","filter","modifier","base","join","concat","toConsumableArray","map","trim","getBEMPAth","BEM","connect","purchase","date","price","currency","productName","type","id","v4","parseFloat","showAllPurchases","clearPurchasesByDate","reportAboutPurchases","totalIncome","showErrorMessage","error","showHelpMessage","props","allPurchases","currencyData","_useState","useState","_useState2","slicedToArray","input","setInput","_useState3","_useState4","buttonColor","setButtonColor","methods","all","clear","report","year","purchaseDate","slice","purchases","Number","toFixed","help","handleButtonColorChange","buttonStyle","react_default","createElement","action","className","onSubmit","preventDefault","args","split","hasOwnProperty","string","match","forEach","arg","handleSubmit","name","placeholder","onChange","target","value","style","backgroundColor","onMouseDown","onMouseUp","PurchasesBlock","key","Output","helpMessage","components_PurchasesBlock_PurchasesBlock","combineReducers","currenciesData","state","payload","currencies","rates","isLoading","hasError","souvenirStore","byDate","objectSpread","defineProperty","newState","assign","allDates","indexOf","prototype","call","sort","Date","reverse","errors","getCurrencies","fromCurrencies","isCurrenciesLoading","isCurrenciesHasErrorLoading","getAllPurchasesByDate","fromSouvenirStore","isStoreHasErrorMessage","getTotalIncome","storeErrorMessage","fetchCurrencies","dispatch","data","_x","useEffect","components_RequestForm_RequestForm","components_Output_Output","ProviderWrapper","children","store","es","ReactDOM","render","Provider","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","components_SouvenirStoreApp_SouvenirStoreApp","document","getElementById"],"mappings":"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","file":"static/js/main.cfa2206e.chunk.js","sourcesContent":["//API fetcher\r\nconst API = 'http://data.fixer.io/api/latest?access_key=26d6132618a9e2ec422be84ba48a260a'\r\n\r\nconst handleErrors = res => {\r\n  if (!res.ok)\r\n    throw new Error(res.statusText)\r\n  else return res\r\n}\r\n\r\nexport const getAllCurrencies = async () =>\r\n  handleErrors(await fetch(API)).json()","//BEM css-styles method optimizer\r\nconst ELEMENT_SEPARATOR = '__',\r\n  MODIFIER_SEPARATOR = '_'\r\n\r\nfunction getBEMPAth({ b, e, m }) {\r\n  const base = e ? [b, e].join(ELEMENT_SEPARATOR) : b\r\n\r\n  return [base, ...m.map(modifier => [base, modifier].join(MODIFIER_SEPARATOR))]\r\n    .join(' ')\r\n    .trim()\r\n}\r\n\r\nconst b = b => (elementName, modifiers = {}) => {\r\n  let e, m\r\n\r\n  if (typeof elementName === 'string') {\r\n    e = elementName\r\n  } else {\r\n    modifiers = elementName || {}\r\n  }\r\n\r\n  if (Array.isArray(modifiers)) {\r\n    m = modifiers\r\n  } else {\r\n    m = Object.keys(modifiers).filter(modifier => modifiers[modifier]) || []\r\n  }\r\n\r\n  return getBEMPAth({ b, e, m })\r\n}\r\n\r\nexport default b","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  clearPurchasesByDate,\r\n  purchase,\r\n  reportAboutPurchases,\r\n  showAllPurchases,\r\n  showErrorMessage,\r\n  showHelpMessage\r\n} from '../../actions'\r\n\r\nimport './RequestForm.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('RequestForm')\r\n\r\nconst RequestForm = props => {\r\n  const {\r\n    purchase,\r\n    showAllPurchases,\r\n    showErrorMessage,\r\n    clearPurchasesByDate,\r\n    reportAboutPurchases,\r\n    allPurchases,\r\n    currencyData,\r\n    showHelpMessage\r\n  } = props\r\n\r\n  const [input, setInput] = useState('')\r\n  const [buttonColor, setButtonColor] = useState(false)\r\n\r\n  const report = (year, currency) => {\r\n    let totalIncome = 0\r\n\r\n    const filteredData = allPurchases.filter(purchaseDate => purchaseDate.id.slice(0, 4) === year)\r\n    filteredData.map(date => date.purchases.map(purchase => {\r\n        purchase.currency !== currency ?\r\n          totalIncome = totalIncome + purchase.price / currencyData[purchase.currency] * currencyData[currency]\r\n          :\r\n          totalIncome += purchase.price\r\n      }\r\n    ))\r\n\r\n    reportAboutPurchases(`${Number((totalIncome).toFixed(2))} ${currency}`)\r\n  }\r\n\r\n  const methods = {\r\n    'purchase': purchase,\r\n    'all': showAllPurchases,\r\n    'clear': clearPurchasesByDate,\r\n    'report': report,\r\n    'help': showHelpMessage\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    e.preventDefault()\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let args = input.split(' ')\r\n\r\n    if (methods.hasOwnProperty(args[0])) {\r\n      if (methods[args[0]] === purchase && args.slice(1).length > 4) {\r\n        const re = /\"*/\r\n        let string = ''\r\n\r\n        if (args.slice(1)[3].match(re)) {\r\n          args.slice(4).forEach(arg => string += ` ${arg}`)\r\n        }\r\n\r\n        methods[args[0]](...args.slice(1, 4), string)\r\n\r\n      } else methods[args[0]](...args.slice(1))\r\n    } else {\r\n      showErrorMessage('Error: No such command.')\r\n    }\r\n  }\r\n\r\n  const handleButtonColorChange = () => {\r\n    setButtonColor(!buttonColor)\r\n  }\r\n\r\n  const buttonStyle = buttonColor ? '#7f8fa6' : '#bdc3c7'\r\n\r\n  return (\r\n    <form action=\"\" className={b()} onSubmit={e => handleSubmit(e)}>\r\n      <input\r\n        type=\"text\"\r\n        name='query'\r\n        placeholder=\"Type your query here...\"\r\n        className={b('input')}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button\r\n        className={b('submit')}\r\n        type='submit'\r\n        style={{ backgroundColor: buttonStyle }}\r\n        onMouseDown={handleButtonColorChange}\r\n        onMouseUp={handleButtonColorChange}>\r\n        Click to Submit\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    purchase,\r\n    showAllPurchases,\r\n    clearPurchasesByDate,\r\n    reportAboutPurchases,\r\n    showErrorMessage,\r\n    showHelpMessage\r\n  }\r\n)(RequestForm)","import { v4 } from 'node-uuid'\r\nimport { getAllCurrencies } from '../api'\r\n//fixer api action-names\r\nexport const FETCH_CURRENCIES_BEGIN = 'FETCH_CURRENCIES_BEGIN'\r\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS'\r\nexport const FETCH_CURRENCIES_FAILURE = 'FETCH_CURRENCIES_FAILURE'\r\n//store action-names\r\nexport const PURCHASE = 'PURCHASE'\r\nexport const SHOW_ALL_PURCHASES = 'SHOW_ALL_PURCHASES'\r\nexport const CLEAR_PURCHASES_BY_DATE = 'CLEAR_PURCHASES_BY_DATE'\r\nexport const REPORT_ABOUT_PURCHASES = 'REPORT_ABOUT_PURCHASES'\r\nexport const SHOW_ERROR_MESSAGE = 'SHOW_ERROR_MESSAGE'\r\nexport const SHOW_HELP_MESSAGE = 'SHOW_HELP_MESSAGE'\r\n\r\n//fixer api actions\r\nexport const fetchCurrenciesBegin = () => ({\r\n  type: FETCH_CURRENCIES_BEGIN\r\n})\r\n\r\nexport const fetchCurrenciesSuccess = currencies => ({\r\n  type: FETCH_CURRENCIES_SUCCESS,\r\n  payload: { currencies }\r\n})\r\n\r\nexport const fetchCurrenciesFailure = error => ({\r\n  type: FETCH_CURRENCIES_FAILURE,\r\n  payload: { error }\r\n})\r\n\r\nexport const fetchCurrencies = () => async (dispatch) => {\r\n  dispatch(fetchCurrenciesBegin())\r\n\r\n  try {\r\n    const data = await getAllCurrencies()\r\n    dispatch(fetchCurrenciesSuccess(data))\r\n  } catch (error) {\r\n    dispatch(fetchCurrenciesFailure(error))\r\n  }\r\n}\r\n\r\n//store actions\r\nexport const purchase = (date, price, currency, productName) => ({\r\n  type: PURCHASE,\r\n  id: v4(),\r\n  date,\r\n  price: parseFloat(price),\r\n  currency,\r\n  productName\r\n})\r\n\r\nexport const showAllPurchases = () => ({\r\n  type: SHOW_ALL_PURCHASES\r\n})\r\n\r\nexport const clearPurchasesByDate = date => ({\r\n  type: CLEAR_PURCHASES_BY_DATE,\r\n  date\r\n})\r\n\r\nexport const reportAboutPurchases = totalIncome => ({\r\n  type: REPORT_ABOUT_PURCHASES,\r\n  totalIncome\r\n})\r\n\r\nexport const showErrorMessage = error => ({\r\n  type: SHOW_ERROR_MESSAGE,\r\n  error\r\n})\r\n\r\nexport const showHelpMessage = () => ({\r\n  type: SHOW_HELP_MESSAGE\r\n})","import React from 'react'\r\n\r\nimport './PurchasesBlock.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('PurchasesBlock')\r\n\r\nconst PurchasesBlock = ({ date, allPurchases }) => (\r\n  <div className={b()}>\r\n    <h5 className={b('date')}>{date}</h5>\r\n    {allPurchases.map(purchase =>\r\n      <p key={purchase.id} className={b('purchase')}>\r\n        {purchase.productName} {purchase.price} {purchase.currency}\r\n      </p>)\r\n    }\r\n  </div>\r\n)\r\n\r\n\r\nexport default PurchasesBlock","import React from 'react'\r\n\r\nimport PurchasesBlock from '../PurchasesBlock/PurchasesBlock'\r\n\r\nimport './Output.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('Output')\r\n\r\nconst Output = ({ allPurchases, error, totalIncome, helpMessage }) => {\r\n  if (error) {\r\n    return (\r\n      <div className={b(['error'])}>\r\n        <h3 className={b('title')}>Error:</h3>\r\n        <p className={b('message')}>{error}<br/>To get instructions please type: <strong>help</strong></p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (totalIncome) {\r\n    return (\r\n      <div className={b()}>\r\n        <h3 className={b('title')}>Output:</h3>\r\n        <p className={b('message')}>{totalIncome}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (helpMessage) {\r\n    return (\r\n      <div className={b()}>\r\n        <h3 className={b('title')}>Help:</h3>\r\n        <div className={b('message')}>\r\n          <p>\r\n            <strong>purchase &lt;date&gt; &lt;price&gt; &lt;currency&gt; &lt;productName&gt;</strong> - add purchase to\r\n            store.<br/>\r\n            <i>\r\n              Example: purchase 2019-04-25 12 USD Photo <br/>\r\n              Output: <br/>\r\n              2019-04-25 <br/>\r\n              Photo 12 USD\r\n            </i>\r\n          </p>\r\n          <p>\r\n            <strong>all</strong> - show all purchases. <br/>\r\n            <i>\r\n              Example: all <br/>\r\n              Output: <br/>\r\n              2019-04-25 <br/>\r\n              Photo 12 USD\r\n            </i>\r\n          </p>\r\n          <p>\r\n            <strong>clear &lt;date&gt;</strong> - removes all purchases for specified date. <br/>\r\n            <i>\r\n              Example: clear 2019-04-25 <br/>\r\n              Output:\r\n            </i>\r\n          </p>\r\n          <p>\r\n            <strong>report &lt;year&gt; &lt;currency&gt;</strong> - calculate the total income for specified year,\r\n            convert\r\n            and present it in specified currency. <br/>\r\n            <i>\r\n              Example: report 2019 UAH <br/>\r\n              Output: <br/>\r\n              356.4 UAH\r\n            </i>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <h3 className={b('title')}>Output:</h3>\r\n      {allPurchases.map(purchaseDate => (\r\n        <PurchasesBlock key={purchaseDate.id} date={purchaseDate.id} allPurchases={purchaseDate.purchases}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Output","import { combineReducers } from 'redux'\r\n\r\nimport { FETCH_CURRENCIES_BEGIN, FETCH_CURRENCIES_FAILURE, FETCH_CURRENCIES_SUCCESS } from '../actions'\r\n\r\n\r\n//Currencies reducers\r\nconst currenciesData = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return state\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return action.payload.currencies.rates\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return action.payload.error\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst isLoading = (state = false, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return true\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return false\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst hasError = (state = null, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES_BEGIN:\r\n      return null\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return null\r\n    case FETCH_CURRENCIES_FAILURE:\r\n      return action.payload.error\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  currenciesData,\r\n  isLoading,\r\n  hasError\r\n})\r\n\r\n//Selectors\r\nexport const getCurrencies = state =>\r\n  state.currenciesData\r\n\r\nexport const isCurrenciesLoading = state =>\r\n  state.isLoading\r\n\r\nexport const isCurrenciesHasErrorLoading = state =>\r\n  state.hasError","import { combineReducers } from 'redux/es/redux'\r\n\r\nimport {\r\n  CLEAR_PURCHASES_BY_DATE,\r\n  PURCHASE,\r\n  REPORT_ABOUT_PURCHASES,\r\n  SHOW_ALL_PURCHASES, SHOW_ERROR_MESSAGE, SHOW_HELP_MESSAGE\r\n} from '../actions'\r\n\r\n//Souvenir-store reducers\r\nconst byDate = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PURCHASE:\r\n      if (!state.hasOwnProperty(action.date)) {\r\n        return {\r\n          ...state,\r\n          [action.date]: {\r\n            id: action.date,\r\n            purchases: [\r\n              {\r\n                id: action.id,\r\n                date: action.date,\r\n                price: action.price,\r\n                currency: action.currency,\r\n                productName: action.productName\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      } else return {\r\n        ...state,\r\n        [action.date]: {\r\n          id: action.date,\r\n          purchases: [\r\n            ...state[action.date].purchases,\r\n            {\r\n              id: action.id,\r\n              date: action.date,\r\n              price: action.price,\r\n              currency: action.currency,\r\n              productName: action.productName\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    case SHOW_ALL_PURCHASES:\r\n      return state\r\n    case CLEAR_PURCHASES_BY_DATE:\r\n      const newState = Object.assign({}, state)\r\n      delete newState[action.date]\r\n      return newState\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allDates = (state = [], action) => {\r\n  switch (action.type) {\r\n    case PURCHASE:\r\n      if (state.indexOf(action.date) === -1)\r\n        return [...state, action.date]\r\n      else return state\r\n    case SHOW_ALL_PURCHASES:\r\n      return Array.prototype.slice.call(state).sort((a, b) => new Date(b) - new Date(a)).reverse()\r\n    case CLEAR_PURCHASES_BY_DATE:\r\n      return state.filter(date => date !== action.date)\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst errors = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SHOW_ERROR_MESSAGE:\r\n      return action.error\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nconst totalIncome = (state = null, action) => {\r\n  switch (action.type) {\r\n    case REPORT_ABOUT_PURCHASES:\r\n      return action.totalIncome\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nconst helpMessage = (state = false, action) => {\r\n  switch (action.type) {\r\n    case SHOW_HELP_MESSAGE:\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nconst souvenirStore = combineReducers({\r\n  byDate,\r\n  allDates,\r\n  errors,\r\n  helpMessage,\r\n  totalIncome\r\n})\r\n\r\nexport default souvenirStore\r\n\r\n//Selectors\r\nexport const getAllPurchasesByDate = state => state.allDates.map(date => state.byDate[date])\r\n\r\nexport const isStoreHasErrorMessage = state => state.errors\r\n\r\nexport const showHelpMessage = state => state.helpMessage\r\n\r\nexport const getTotalIncome = state => state.totalIncome","import { combineReducers } from 'redux/es/redux'\r\n\r\nimport currencies, * as fromCurrencies from './currencies'\r\nimport souvenirStore, * as fromSouvenirStore from './sovenirStore'\r\n\r\nexport default combineReducers({\r\n  currencies: currencies,\r\n  souvenirStore: souvenirStore\r\n})\r\n\r\n//Currencies selectors\r\nexport const getCurrencies = state =>\r\n  fromCurrencies.getCurrencies(state.currencies)\r\n\r\nexport const isCurrenciesLoading = state =>\r\n  fromCurrencies.isCurrenciesLoading(state.currencies)\r\n\r\nexport const isCurrenciesHasErrorLoading = state =>\r\n  fromCurrencies.isCurrenciesHasErrorLoading(state.currencies)\r\n\r\n//Store selectors\r\nexport const getAllPurchasesByDate = state =>\r\n  fromSouvenirStore.getAllPurchasesByDate(state.souvenirStore)\r\n\r\nexport const isStoreHasErrorMessage = state =>\r\n  fromSouvenirStore.isStoreHasErrorMessage(state.souvenirStore)\r\n\r\nexport const showHelpMessage = state =>\r\n  fromSouvenirStore.showHelpMessage(state.souvenirStore)\r\n\r\nexport const getTotalIncome = state =>\r\n  fromSouvenirStore.getTotalIncome(state.souvenirStore)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport RequestForm from '../RequestForm'\r\nimport Output from '../Output'\r\nimport {\r\n  getAllPurchasesByDate,\r\n  getCurrencies,\r\n  isCurrenciesLoading,\r\n  isCurrenciesHasErrorLoading,\r\n  isStoreHasErrorMessage,\r\n  getTotalIncome, showHelpMessage\r\n} from '../../reducers'\r\nimport { fetchCurrencies } from '../../actions'\r\n\r\nimport './SouvenirStoreApp.scss'\r\nimport BEM from '../../helpers/BEM'\r\n\r\nconst b = BEM('SouvenirStoreApp')\r\n\r\nconst SouvenirStoreApp = ({ fetchCurrencies, currencies, isLoading, hasError, allPurchases, storeErrorMessage, totalIncome, helpMessage }) => {\r\n  useEffect(() => {\r\n    fetchCurrencies()\r\n  }, [fetchCurrencies])\r\n\r\n  if (isLoading) return <div className={b('data-error')}>Data is Loading...</div>\r\n\r\n  if (hasError) return <div className={b('data-error')}>Error occurred while fetching API: {hasError}</div>\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <h1 className={b('title')}>Souvenir-store App</h1>\r\n      <RequestForm\r\n        allPurchases={allPurchases}\r\n        currencyData={currencies}/>\r\n      <Output\r\n        allPurchases={allPurchases}\r\n        totalIncome={totalIncome}\r\n        error={storeErrorMessage}\r\n        helpMessage={helpMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    currencies: getCurrencies(state),\r\n    isLoading: isCurrenciesLoading(state),\r\n    hasError: isCurrenciesHasErrorLoading(state),\r\n    allPurchases: getAllPurchasesByDate(state),\r\n    storeErrorMessage: isStoreHasErrorMessage(state),\r\n    totalIncome: getTotalIncome(state),\r\n    helpMessage: showHelpMessage(state)\r\n  }),\r\n  {\r\n    fetchCurrencies\r\n  }\r\n)(SouvenirStoreApp)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst ProviderWrapper = ({ children, store }) => (\r\n  <Provider store={store}>\r\n    {children}\r\n  </Provider>\r\n)\r\n\r\nexport default ProviderWrapper","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport SouvenirStoreApp from './components/SouvenirStoreApp'\nimport ProviderWrapper from './components/Provider'\nimport configureStore from './configureStore'\n\nimport './index.css'\n\nReactDOM.render(\n  <ProviderWrapper store={configureStore()}>\n    <SouvenirStoreApp/>\n  </ProviderWrapper>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n//redux-store config\r\nexport default () =>\r\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))"],"sourceRoot":""}